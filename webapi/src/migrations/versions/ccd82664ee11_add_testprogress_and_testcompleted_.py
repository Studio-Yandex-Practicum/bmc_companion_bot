"""Add TestProgress and TestCompleted models

Revision ID: ccd82664ee11
Revises: d6a45f691f77
Create Date: 2023-01-12 16:30:59.403295

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "ccd82664ee11"
down_revision = "d6a45f691f77"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "completed_tests",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("value", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("test_id", sa.Integer(), nullable=False),
        sa.Column("deleted_at", sa.DateTime(), nullable=True, comment="Время удаления"),
        sa.ForeignKeyConstraint(
            ["test_id"], ["tests.id"], name=op.f("fk_completed_tests_test_id_tests")
        ),
        sa.ForeignKeyConstraint(
            ["user_id"], ["users.id"], name=op.f("fk_completed_tests_user_id_users")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_completed_tests")),
        sa.UniqueConstraint("user_id", "test_id", name="unique_test_completed"),
    )
    op.create_table(
        "test_questions",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("text", sa.Text(), nullable=True),
        sa.Column("question_id", sa.Integer(), nullable=False),
        sa.Column("test_id", sa.Integer(), nullable=False),
        sa.Column("order_num", sa.Integer(), nullable=False),
        sa.Column("deleted_at", sa.DateTime(), nullable=True, comment="Время удаления"),
        sa.ForeignKeyConstraint(
            ["question_id"], ["questions.id"], name=op.f("fk_test_questions_question_id_questions")
        ),
        sa.ForeignKeyConstraint(
            ["test_id"], ["tests.id"], name=op.f("fk_test_questions_test_id_tests")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_test_questions")),
        sa.UniqueConstraint("test_id", "question_id", name="unique_question_in_test"),
    )
    op.create_table(
        "tests_progress",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("test_question_id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("deleted_at", sa.DateTime(), nullable=True, comment="Время удаления"),
        sa.ForeignKeyConstraint(
            ["test_question_id"],
            ["test_questions.id"],
            name=op.f("fk_tests_progress_test_question_id_test_questions"),
        ),
        sa.ForeignKeyConstraint(
            ["user_id"], ["users.id"], name=op.f("fk_tests_progress_user_id_users")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_tests_progress")),
        sa.UniqueConstraint("user_id", "test_question_id", name="unique_progress"),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("tests_progress")
    op.drop_table("test_questions")
    op.drop_table("completed_tests")
    # ### end Alembic commands ###
